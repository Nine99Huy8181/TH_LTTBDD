import React, { useState, useCallback, useMemo } from 'react';
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  StyleSheet,
  Alert,
  Dimensions,
  ScrollView,
  CheckboxItem,
  CheckBox
} from 'react-native';
import * as Clipboard from 'expo-clipboard';



export default function Bai01() {
  const [isSelected1, setSelection1] = useState(false);
  const [isSelected2, setSelection2] = useState(false);
  const [isSelected3, setSelection3] = useState(false);
  const [isSelected4, setSelection4] = useState(false);
  
    const [passwordLength, setPasswordLength] = useState('8'); // Default length
  const [generatedPassword, setGeneratedPassword] = useState('');

  const generatePassword = () => {
    const lowercase = 'abcdefghijklmnopqrstuvwxyz';
    const uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    const numbers = '0123456789';
    const symbols = '!@#$%^&*()_+-=[]{}|;:,.<>?';
    
    let characters = '';
    if (isSelected1) characters += lowercase;
    if (isSelected2) characters += uppercase;
    if (isSelected3) characters += numbers;
    if (isSelected4) characters += symbols;

    if (!characters) {
      setGeneratedPassword('');
      return;
    }

    const length = parseInt(passwordLength) || 8;
    let result = '';
    
    if (isSelected1) result += lowercase[Math.floor(Math.random() * lowercase.length)];
    if (isSelected2) result += uppercase[Math.floor(Math.random() * uppercase.length)];
    if (isSelected3) result += numbers[Math.floor(Math.random() * numbers.length)];
    if (isSelected4) result += symbols[Math.floor(Math.random() * symbols.length)];

    for (let i = result.length; i < length; i++) {
      result += characters[Math.floor(Math.random() * characters.length)];
    }

    result = result.split('').sort(() => Math.random() - 0.5).join('');
    setGeneratedPassword(result);
  };

  return (
    <ScrollView contentContainerStyle={styles.container}>
      <View style={styles.header}>
        <Text style={styles.title}>PASSWORD{'\n'}GENERATOR</Text>
      </View>

      <TouchableOpacity style={styles.passwordDisplay}>
        <Text style={styles.passwordText}>
          {generatedPassword}
        </Text>
      </TouchableOpacity>

      <View style={styles.inputContainer}>
        <Text style={styles.inputLabel}>Password length</Text>
        <TextInput
          style={styles.lengthInput}
          keyboardType="numeric"
          maxLength={3}
          value={passwordLength}
          onChangeText={setPasswordLength}
        />
      </View>
      <View style={styles.checkboxContainer}>
        <CheckBox
          value={isSelected1}
          onValueChange={setSelection1}
          style={styles.checkbox}
        />
        <Text style={styles.label}>Include lower case letters</Text>
      </View>
      <View style={styles.checkboxContainer}>
        <CheckBox
          value={isSelected2}
          onValueChange={setSelection2}
          style={styles.checkbox}
        />
        <Text style={styles.label}>Include upcase letters</Text>
      </View>
      <View style={styles.checkboxContainer}>
        <CheckBox
          value={isSelected3}
          onValueChange={setSelection3}
          style={styles.checkbox}
        />
        <Text style={styles.label}>Include number</Text>
      </View>
      <View style={styles.checkboxContainer}>
        <CheckBox
          value={isSelected4}
          onValueChange={setSelection4}
          style={styles.checkbox}
        />
        <Text style={styles.label}>Include special symbol</Text>
      </View>
      <TouchableOpacity 
        style={styles.generateButton}
        onPress={generatePassword}
      >
        <Text style={styles.generateButtonText}>GENERATE PASSWORD</Text>
      </TouchableOpacity>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: {
    flexGrow: 1,
    padding: 20,
    backgroundColor: '#fff',
  },
  header: {
    alignItems: 'center',
    marginBottom: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    textAlign: 'center',
  },
  passwordDisplay: {
    backgroundColor: '#f0f0f0',
    padding: 15,
    borderRadius: 5,
    marginBottom: 20,
    alignItems: 'center',
  },
  passwordText: {
    fontSize: 18,
    fontFamily: 'monospace',
  },
  inputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 20,
  },
  inputLabel: {
    flex: 1,
    fontSize: 16,
  },
  lengthInput: {
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 5,
    padding: 10,
    width: 80,
    textAlign: 'center',
  },
  checkboxContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 15,
  },
  checkbox: {
    marginRight: 10,
  },
  label: {
    fontSize: 16,
  },
  generateButton: {
    backgroundColor: '#007AFF',
    padding: 15,
    borderRadius: 5,
    alignItems: 'center',
    marginTop: 20,
  },
  generateButtonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
});